
lab2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000228  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000358  08000360  00010360  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000358  08000358  00010360  2**0
                  CONTENTS
  4 .ARM          00000000  08000358  08000358  00010360  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000358  08000360  00010360  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000358  08000358  00010358  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800035c  0800035c  0001035c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010360  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000360  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000360  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010360  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000118  00000000  00000000  00010389  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000008f  00000000  00000000  000104a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000013c  00000000  00000000  00010530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000068  00000000  00000000  00010670  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000050  00000000  00000000  000106d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001dc2  00000000  00000000  00010728  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000069f  00000000  00000000  000124ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00007efc  00000000  00000000  00012b89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001aa85  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000d8  00000000  00000000  0001aad8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000340 	.word	0x08000340

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000340 	.word	0x08000340

08000170 <gpio_init>:
#define EXTI_IMR *(volatile unsigned int *)(EXTI_BASE+0x00)
#define EXTI_RTSR *(volatile unsigned int *)(EXTI_BASE+0x08)
#define EXTI_PR *(volatile unsigned int *)(EXTI_BASE+0x14)
#define NVIC_EXTIE1 	*(volatile unsigned int*)(0xE000E100)
void gpio_init()
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	GPIOA_CRL=0x0;
 8000174:	4b15      	ldr	r3, [pc, #84]	; (80001cc <gpio_init+0x5c>)
 8000176:	2200      	movs	r2, #0
 8000178:	601a      	str	r2, [r3, #0]
	GPIOA_CRH=0x0;
 800017a:	4b15      	ldr	r3, [pc, #84]	; (80001d0 <gpio_init+0x60>)
 800017c:	2200      	movs	r2, #0
 800017e:	601a      	str	r2, [r3, #0]
	GPIOA_ODR=0x0;
 8000180:	4b14      	ldr	r3, [pc, #80]	; (80001d4 <gpio_init+0x64>)
 8000182:	2200      	movs	r2, #0
 8000184:	601a      	str	r2, [r3, #0]
	GPIOB_CRL=0x0;
 8000186:	4b14      	ldr	r3, [pc, #80]	; (80001d8 <gpio_init+0x68>)
 8000188:	2200      	movs	r2, #0
 800018a:	601a      	str	r2, [r3, #0]
	GPIOB_CRH=0x0;
 800018c:	4b13      	ldr	r3, [pc, #76]	; (80001dc <gpio_init+0x6c>)
 800018e:	2200      	movs	r2, #0
 8000190:	601a      	str	r2, [r3, #0]
	GPIOB_ODR=0x0;
 8000192:	4b13      	ldr	r3, [pc, #76]	; (80001e0 <gpio_init+0x70>)
 8000194:	2200      	movs	r2, #0
 8000196:	601a      	str	r2, [r3, #0]
	//CONFIGURE PORTB PIN1 AS FLOATING INPUT
	//CNF1
	GPIOB_CRL |=(0b01<<6);
 8000198:	4b0f      	ldr	r3, [pc, #60]	; (80001d8 <gpio_init+0x68>)
 800019a:	681b      	ldr	r3, [r3, #0]
 800019c:	4a0e      	ldr	r2, [pc, #56]	; (80001d8 <gpio_init+0x68>)
 800019e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001a2:	6013      	str	r3, [r2, #0]
	//MODE1
	GPIOB_CRL &=~(0b11<<4);
 80001a4:	4b0c      	ldr	r3, [pc, #48]	; (80001d8 <gpio_init+0x68>)
 80001a6:	681b      	ldr	r3, [r3, #0]
 80001a8:	4a0b      	ldr	r2, [pc, #44]	; (80001d8 <gpio_init+0x68>)
 80001aa:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80001ae:	6013      	str	r3, [r2, #0]
	//CONFIGURE PORTA PIN5 AS OUTPUT PUSH-PULL
	//CNF1
	GPIOA_CRL &=~(0b00<<22);
 80001b0:	4b06      	ldr	r3, [pc, #24]	; (80001cc <gpio_init+0x5c>)
 80001b2:	4a06      	ldr	r2, [pc, #24]	; (80001cc <gpio_init+0x5c>)
 80001b4:	681b      	ldr	r3, [r3, #0]
 80001b6:	6013      	str	r3, [r2, #0]
	//MODE1
	GPIOA_CRL |=(0b01<<20);
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <gpio_init+0x5c>)
 80001ba:	681b      	ldr	r3, [r3, #0]
 80001bc:	4a03      	ldr	r2, [pc, #12]	; (80001cc <gpio_init+0x5c>)
 80001be:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80001c2:	6013      	str	r3, [r2, #0]

}
 80001c4:	bf00      	nop
 80001c6:	46bd      	mov	sp, r7
 80001c8:	bc80      	pop	{r7}
 80001ca:	4770      	bx	lr
 80001cc:	40010800 	.word	0x40010800
 80001d0:	40010804 	.word	0x40010804
 80001d4:	4001080c 	.word	0x4001080c
 80001d8:	40010c00 	.word	0x40010c00
 80001dc:	40010c04 	.word	0x40010c04
 80001e0:	40010c0c 	.word	0x40010c0c

080001e4 <clock_init>:
void clock_init()
{
 80001e4:	b480      	push	{r7}
 80001e6:	af00      	add	r7, sp, #0
	//enable clock init for alternative I/O for apb2
	RCC_APB2ENR|=(1<<0);
 80001e8:	4b0a      	ldr	r3, [pc, #40]	; (8000214 <clock_init+0x30>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	4a09      	ldr	r2, [pc, #36]	; (8000214 <clock_init+0x30>)
 80001ee:	f043 0301 	orr.w	r3, r3, #1
 80001f2:	6013      	str	r3, [r2, #0]
	//port A clock enable
	RCC_APB2ENR|=(1<<1);
 80001f4:	4b07      	ldr	r3, [pc, #28]	; (8000214 <clock_init+0x30>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4a06      	ldr	r2, [pc, #24]	; (8000214 <clock_init+0x30>)
 80001fa:	f043 0302 	orr.w	r3, r3, #2
 80001fe:	6013      	str	r3, [r2, #0]
	//port B clock enable
	RCC_APB2ENR|=(1<<2);
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <clock_init+0x30>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	4a03      	ldr	r2, [pc, #12]	; (8000214 <clock_init+0x30>)
 8000206:	f043 0304 	orr.w	r3, r3, #4
 800020a:	6013      	str	r3, [r2, #0]
}
 800020c:	bf00      	nop
 800020e:	46bd      	mov	sp, r7
 8000210:	bc80      	pop	{r7}
 8000212:	4770      	bx	lr
 8000214:	40021018 	.word	0x40021018

08000218 <EXTI_INIT>:
void EXTI_INIT()
{
 8000218:	b480      	push	{r7}
 800021a:	af00      	add	r7, sp, #0
	//Interrupt request from Line 1 is not masked
	EXTI_IMR |=(1<<1);
 800021c:	4b0d      	ldr	r3, [pc, #52]	; (8000254 <EXTI_INIT+0x3c>)
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	4a0c      	ldr	r2, [pc, #48]	; (8000254 <EXTI_INIT+0x3c>)
 8000222:	f043 0302 	orr.w	r3, r3, #2
 8000226:	6013      	str	r3, [r2, #0]
	//Rising trigger enabled (for Event and Interrupt) for line1 as input
	EXTI_RTSR |=(1<<1);
 8000228:	4b0b      	ldr	r3, [pc, #44]	; (8000258 <EXTI_INIT+0x40>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a0a      	ldr	r2, [pc, #40]	; (8000258 <EXTI_INIT+0x40>)
 800022e:	f043 0302 	orr.w	r3, r3, #2
 8000232:	6013      	str	r3, [r2, #0]
	//select the pin 1 portB as a source input for EXTI line 1
	AFIO_EXTICR1|=(0001<<4);
 8000234:	4b09      	ldr	r3, [pc, #36]	; (800025c <EXTI_INIT+0x44>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a08      	ldr	r2, [pc, #32]	; (800025c <EXTI_INIT+0x44>)
 800023a:	f043 0310 	orr.w	r3, r3, #16
 800023e:	6013      	str	r3, [r2, #0]
	//enable irq for nvic
	NVIC_EXTIE1 |=(1<<7);
 8000240:	4b07      	ldr	r3, [pc, #28]	; (8000260 <EXTI_INIT+0x48>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a06      	ldr	r2, [pc, #24]	; (8000260 <EXTI_INIT+0x48>)
 8000246:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800024a:	6013      	str	r3, [r2, #0]
}
 800024c:	bf00      	nop
 800024e:	46bd      	mov	sp, r7
 8000250:	bc80      	pop	{r7}
 8000252:	4770      	bx	lr
 8000254:	40010400 	.word	0x40010400
 8000258:	40010408 	.word	0x40010408
 800025c:	40010008 	.word	0x40010008
 8000260:	e000e100 	.word	0xe000e100

08000264 <main>:


int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	gpio_init();
 8000268:	f7ff ff82 	bl	8000170 <gpio_init>
	clock_init();
 800026c:	f7ff ffba 	bl	80001e4 <clock_init>
	EXTI_INIT();
 8000270:	f7ff ffd2 	bl	8000218 <EXTI_INIT>
	while(1)
 8000274:	e7fe      	b.n	8000274 <main+0x10>
	...

08000278 <EXTI1_IRQHandler>:
	}
	return 0;

}
void EXTI1_IRQHandler(void)
{
 8000278:	b480      	push	{r7}
 800027a:	af00      	add	r7, sp, #0
	//IRQ IS HAPPENED>>EXTI1_|_RISING EDGE
	//PINA5
	GPIOA_ODR ^=(1<<5);
 800027c:	4b07      	ldr	r3, [pc, #28]	; (800029c <EXTI1_IRQHandler+0x24>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4a06      	ldr	r2, [pc, #24]	; (800029c <EXTI1_IRQHandler+0x24>)
 8000282:	f083 0320 	eor.w	r3, r3, #32
 8000286:	6013      	str	r3, [r2, #0]
	//Pending register: cleared by writing a ‘1’ into the bit.
	//selected trigger request occurred
	EXTI_PR |=(1<<1);
 8000288:	4b05      	ldr	r3, [pc, #20]	; (80002a0 <EXTI1_IRQHandler+0x28>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	4a04      	ldr	r2, [pc, #16]	; (80002a0 <EXTI1_IRQHandler+0x28>)
 800028e:	f043 0302 	orr.w	r3, r3, #2
 8000292:	6013      	str	r3, [r2, #0]
}
 8000294:	bf00      	nop
 8000296:	46bd      	mov	sp, r7
 8000298:	bc80      	pop	{r7}
 800029a:	4770      	bx	lr
 800029c:	4001080c 	.word	0x4001080c
 80002a0:	40010414 	.word	0x40010414

080002a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a4:	480d      	ldr	r0, [pc, #52]	; (80002dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ac:	480c      	ldr	r0, [pc, #48]	; (80002e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ae:	490d      	ldr	r1, [pc, #52]	; (80002e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b0:	4a0d      	ldr	r2, [pc, #52]	; (80002e8 <LoopForever+0xe>)
  movs r3, #0
 80002b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b4:	e002      	b.n	80002bc <LoopCopyDataInit>

080002b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ba:	3304      	adds	r3, #4

080002bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c0:	d3f9      	bcc.n	80002b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c2:	4a0a      	ldr	r2, [pc, #40]	; (80002ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c4:	4c0a      	ldr	r4, [pc, #40]	; (80002f0 <LoopForever+0x16>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c8:	e001      	b.n	80002ce <LoopFillZerobss>

080002ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002cc:	3204      	adds	r2, #4

080002ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d0:	d3fb      	bcc.n	80002ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002d2:	f000 f811 	bl	80002f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d6:	f7ff ffc5 	bl	8000264 <main>

080002da <LoopForever>:

LoopForever:
    b LoopForever
 80002da:	e7fe      	b.n	80002da <LoopForever>
  ldr   r0, =_estack
 80002dc:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 80002e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e8:	08000360 	.word	0x08000360
  ldr r2, =_sbss
 80002ec:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f0:	2000001c 	.word	0x2000001c

080002f4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f4:	e7fe      	b.n	80002f4 <ADC1_2_IRQHandler>
	...

080002f8 <__libc_init_array>:
 80002f8:	b570      	push	{r4, r5, r6, lr}
 80002fa:	2600      	movs	r6, #0
 80002fc:	4d0c      	ldr	r5, [pc, #48]	; (8000330 <__libc_init_array+0x38>)
 80002fe:	4c0d      	ldr	r4, [pc, #52]	; (8000334 <__libc_init_array+0x3c>)
 8000300:	1b64      	subs	r4, r4, r5
 8000302:	10a4      	asrs	r4, r4, #2
 8000304:	42a6      	cmp	r6, r4
 8000306:	d109      	bne.n	800031c <__libc_init_array+0x24>
 8000308:	f000 f81a 	bl	8000340 <_init>
 800030c:	2600      	movs	r6, #0
 800030e:	4d0a      	ldr	r5, [pc, #40]	; (8000338 <__libc_init_array+0x40>)
 8000310:	4c0a      	ldr	r4, [pc, #40]	; (800033c <__libc_init_array+0x44>)
 8000312:	1b64      	subs	r4, r4, r5
 8000314:	10a4      	asrs	r4, r4, #2
 8000316:	42a6      	cmp	r6, r4
 8000318:	d105      	bne.n	8000326 <__libc_init_array+0x2e>
 800031a:	bd70      	pop	{r4, r5, r6, pc}
 800031c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000320:	4798      	blx	r3
 8000322:	3601      	adds	r6, #1
 8000324:	e7ee      	b.n	8000304 <__libc_init_array+0xc>
 8000326:	f855 3b04 	ldr.w	r3, [r5], #4
 800032a:	4798      	blx	r3
 800032c:	3601      	adds	r6, #1
 800032e:	e7f2      	b.n	8000316 <__libc_init_array+0x1e>
 8000330:	08000358 	.word	0x08000358
 8000334:	08000358 	.word	0x08000358
 8000338:	08000358 	.word	0x08000358
 800033c:	0800035c 	.word	0x0800035c

08000340 <_init>:
 8000340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000342:	bf00      	nop
 8000344:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000346:	bc08      	pop	{r3}
 8000348:	469e      	mov	lr, r3
 800034a:	4770      	bx	lr

0800034c <_fini>:
 800034c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034e:	bf00      	nop
 8000350:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000352:	bc08      	pop	{r3}
 8000354:	469e      	mov	lr, r3
 8000356:	4770      	bx	lr
