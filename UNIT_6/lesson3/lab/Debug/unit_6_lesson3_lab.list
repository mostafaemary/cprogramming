
unit_6_lesson3_lab.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001a0  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002d0  080002d0  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002d0  080002d0  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  080002d0  080002d0  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002d0  080002d0  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002d0  080002d0  000102d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002d4  080002d4  000102d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  080002d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  080002dc  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  080002dc  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000166  00000000  00000000  0002002d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000100  00000000  00000000  00020193  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00020298  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  000202e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f4c  00000000  00000000  00020310  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000044f  00000000  00000000  0002125c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003bb1  00000000  00000000  000216ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002525c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  000252ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000004 	.word	0x20000004
 800014c:	00000000 	.word	0x00000000
 8000150:	080002b8 	.word	0x080002b8

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000008 	.word	0x20000008
 800016c:	080002b8 	.word	0x080002b8

08000170 <main>:
}ACCESS_PORTA;
volatile ACCESS_PORTA*access_a=(volatile ACCESS_PORTA* )(PORTA_BASE+0x0c);


int main()
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
	//RCC_APB2ENR|=1<<2;
	PORTA_CRH &=0xff0fffff;
 8000176:	4b25      	ldr	r3, [pc, #148]	; (800020c <main+0x9c>)
 8000178:	681b      	ldr	r3, [r3, #0]
 800017a:	4a24      	ldr	r2, [pc, #144]	; (800020c <main+0x9c>)
 800017c:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000180:	6013      	str	r3, [r2, #0]
	PORTA_CRH |=0x00200000;
 8000182:	4b22      	ldr	r3, [pc, #136]	; (800020c <main+0x9c>)
 8000184:	681b      	ldr	r3, [r3, #0]
 8000186:	4a21      	ldr	r2, [pc, #132]	; (800020c <main+0x9c>)
 8000188:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800018c:	6013      	str	r3, [r2, #0]
	//	1100: PLL input clock x 14
	//	1101: PLL input clock x 15
	//	1110: PLL input clock x 16
	//	1111: PLL input clock x 16

	RCC_CFGR|=(0b0110<<18);
 800018e:	4b20      	ldr	r3, [pc, #128]	; (8000210 <main+0xa0>)
 8000190:	681b      	ldr	r3, [r3, #0]
 8000192:	4a1f      	ldr	r2, [pc, #124]	; (8000210 <main+0xa0>)
 8000194:	f443 13c0 	orr.w	r3, r3, #1572864	; 0x180000
 8000198:	6013      	str	r3, [r2, #0]
	//	111: HCLK divided by 16


	/*lab2_1	RCC_CFGR|=1<<11;
	RCC_CFGR|=1<<13;//RCC_CFGR|=(0b101<<11);*/
	RCC_CFGR|=(0b101<<11);
 800019a:	4b1d      	ldr	r3, [pc, #116]	; (8000210 <main+0xa0>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	4a1c      	ldr	r2, [pc, #112]	; (8000210 <main+0xa0>)
 80001a0:	f443 5320 	orr.w	r3, r3, #10240	; 0x2800
 80001a4:	6013      	str	r3, [r2, #0]
	//	101: HCLK divided by 4
	//	110: HCLK divided by 8
	//	111: HCLK divided by 16

	/*lab2_1 RCC_CFGR|=(0b100<<8);*/
	RCC_CFGR|=(0b100<<8);
 80001a6:	4b1a      	ldr	r3, [pc, #104]	; (8000210 <main+0xa0>)
 80001a8:	681b      	ldr	r3, [r3, #0]
 80001aa:	4a19      	ldr	r2, [pc, #100]	; (8000210 <main+0xa0>)
 80001ac:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80001b0:	6013      	str	r3, [r2, #0]
	//	Set and cleared by software to enable PLL.
	//	Cleared by hardware when entering Stop or Standby mode. This bit can not be reset if the
	//	PLL clock is used as system clock or is selected to become the system clock.
	//	0: PLL OFF
	//	//1: PLL ON
	RCC_CFGR|=(0b10<<0);
 80001b2:	4b17      	ldr	r3, [pc, #92]	; (8000210 <main+0xa0>)
 80001b4:	681b      	ldr	r3, [r3, #0]
 80001b6:	4a16      	ldr	r2, [pc, #88]	; (8000210 <main+0xa0>)
 80001b8:	f043 0302 	orr.w	r3, r3, #2
 80001bc:	6013      	str	r3, [r2, #0]
	RCC_CR |=1<<24;
 80001be:	4b15      	ldr	r3, [pc, #84]	; (8000214 <main+0xa4>)
 80001c0:	681b      	ldr	r3, [r3, #0]
 80001c2:	4a14      	ldr	r2, [pc, #80]	; (8000214 <main+0xa4>)
 80001c4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001c8:	6013      	str	r3, [r2, #0]


	while(1)
	{
		int i;
		for(i=0;i<4000;i++)
 80001ca:	2300      	movs	r3, #0
 80001cc:	607b      	str	r3, [r7, #4]
 80001ce:	e008      	b.n	80001e2 <main+0x72>
			access_a->PORT_FIELD.LED=1;
 80001d0:	4b11      	ldr	r3, [pc, #68]	; (8000218 <main+0xa8>)
 80001d2:	681a      	ldr	r2, [r3, #0]
 80001d4:	6813      	ldr	r3, [r2, #0]
 80001d6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80001da:	6013      	str	r3, [r2, #0]
		for(i=0;i<4000;i++)
 80001dc:	687b      	ldr	r3, [r7, #4]
 80001de:	3301      	adds	r3, #1
 80001e0:	607b      	str	r3, [r7, #4]
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 80001e8:	dbf2      	blt.n	80001d0 <main+0x60>
		//PORTA_ODR|=1<<13;
		for(i=0;i<4000;i++)
 80001ea:	2300      	movs	r3, #0
 80001ec:	607b      	str	r3, [r7, #4]
 80001ee:	e008      	b.n	8000202 <main+0x92>
			access_a->PORT_FIELD.LED=0;
 80001f0:	4b09      	ldr	r3, [pc, #36]	; (8000218 <main+0xa8>)
 80001f2:	681a      	ldr	r2, [r3, #0]
 80001f4:	6813      	ldr	r3, [r2, #0]
 80001f6:	f36f 334d 	bfc	r3, #13, #1
 80001fa:	6013      	str	r3, [r2, #0]
		for(i=0;i<4000;i++)
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	3301      	adds	r3, #1
 8000200:	607b      	str	r3, [r7, #4]
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 8000208:	dbf2      	blt.n	80001f0 <main+0x80>
	{
 800020a:	e7de      	b.n	80001ca <main+0x5a>
 800020c:	40010804 	.word	0x40010804
 8000210:	40021004 	.word	0x40021004
 8000214:	40021000 	.word	0x40021000
 8000218:	20000000 	.word	0x20000000

0800021c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800021c:	480d      	ldr	r0, [pc, #52]	; (8000254 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800021e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000220:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000224:	480c      	ldr	r0, [pc, #48]	; (8000258 <LoopForever+0x6>)
  ldr r1, =_edata
 8000226:	490d      	ldr	r1, [pc, #52]	; (800025c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000228:	4a0d      	ldr	r2, [pc, #52]	; (8000260 <LoopForever+0xe>)
  movs r3, #0
 800022a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800022c:	e002      	b.n	8000234 <LoopCopyDataInit>

0800022e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800022e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000230:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000232:	3304      	adds	r3, #4

08000234 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000234:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000236:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000238:	d3f9      	bcc.n	800022e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800023a:	4a0a      	ldr	r2, [pc, #40]	; (8000264 <LoopForever+0x12>)
  ldr r4, =_ebss
 800023c:	4c0a      	ldr	r4, [pc, #40]	; (8000268 <LoopForever+0x16>)
  movs r3, #0
 800023e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000240:	e001      	b.n	8000246 <LoopFillZerobss>

08000242 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000242:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000244:	3204      	adds	r2, #4

08000246 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000246:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000248:	d3fb      	bcc.n	8000242 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800024a:	f000 f811 	bl	8000270 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800024e:	f7ff ff8f 	bl	8000170 <main>

08000252 <LoopForever>:

LoopForever:
    b LoopForever
 8000252:	e7fe      	b.n	8000252 <LoopForever>
  ldr   r0, =_estack
 8000254:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000258:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800025c:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000260:	080002d8 	.word	0x080002d8
  ldr r2, =_sbss
 8000264:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000268:	20000020 	.word	0x20000020

0800026c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800026c:	e7fe      	b.n	800026c <ADC1_2_IRQHandler>
	...

08000270 <__libc_init_array>:
 8000270:	b570      	push	{r4, r5, r6, lr}
 8000272:	2600      	movs	r6, #0
 8000274:	4d0c      	ldr	r5, [pc, #48]	; (80002a8 <__libc_init_array+0x38>)
 8000276:	4c0d      	ldr	r4, [pc, #52]	; (80002ac <__libc_init_array+0x3c>)
 8000278:	1b64      	subs	r4, r4, r5
 800027a:	10a4      	asrs	r4, r4, #2
 800027c:	42a6      	cmp	r6, r4
 800027e:	d109      	bne.n	8000294 <__libc_init_array+0x24>
 8000280:	f000 f81a 	bl	80002b8 <_init>
 8000284:	2600      	movs	r6, #0
 8000286:	4d0a      	ldr	r5, [pc, #40]	; (80002b0 <__libc_init_array+0x40>)
 8000288:	4c0a      	ldr	r4, [pc, #40]	; (80002b4 <__libc_init_array+0x44>)
 800028a:	1b64      	subs	r4, r4, r5
 800028c:	10a4      	asrs	r4, r4, #2
 800028e:	42a6      	cmp	r6, r4
 8000290:	d105      	bne.n	800029e <__libc_init_array+0x2e>
 8000292:	bd70      	pop	{r4, r5, r6, pc}
 8000294:	f855 3b04 	ldr.w	r3, [r5], #4
 8000298:	4798      	blx	r3
 800029a:	3601      	adds	r6, #1
 800029c:	e7ee      	b.n	800027c <__libc_init_array+0xc>
 800029e:	f855 3b04 	ldr.w	r3, [r5], #4
 80002a2:	4798      	blx	r3
 80002a4:	3601      	adds	r6, #1
 80002a6:	e7f2      	b.n	800028e <__libc_init_array+0x1e>
 80002a8:	080002d0 	.word	0x080002d0
 80002ac:	080002d0 	.word	0x080002d0
 80002b0:	080002d0 	.word	0x080002d0
 80002b4:	080002d4 	.word	0x080002d4

080002b8 <_init>:
 80002b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ba:	bf00      	nop
 80002bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002be:	bc08      	pop	{r3}
 80002c0:	469e      	mov	lr, r3
 80002c2:	4770      	bx	lr

080002c4 <_fini>:
 80002c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002c6:	bf00      	nop
 80002c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ca:	bc08      	pop	{r3}
 80002cc:	469e      	mov	lr, r3
 80002ce:	4770      	bx	lr
